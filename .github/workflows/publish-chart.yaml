name: Publish TikTocker Helm Chart

on:
  push:
    branches:
      - master
    tags:
      - "v[0-9]+.*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish-images:
    name: Build TikTocker Helm Chart

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses:  actions/checkout@v4
      - uses: dorny/paths-filter@v3.0.2
        id: filter
        name: Determine if TikTocker Chart should be built
        with:
          filters: |
            tiktockerChart:
              - 'deployment/**'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: steps.filter.outputs.tiktockerChart == 'true' || contains(github.ref, 'refs/tags/v')
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        if: steps.filter.outputs.tiktockerChart == 'true' || contains(github.ref, 'refs/tags/v')
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        uses: docker/metadata-action@v5
        if: steps.filter.outputs.tiktockerChart == 'true' || contains(github.ref, 'refs/tags/v')
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # extract version after `v` prefix
            type=match,pattern=v(.*),group=1
            # fallback to branch name
            type=ref,event=branch
      - name: Install Helm
        uses: azure/setup-helm@v4.3.0
        if: steps.filter.outputs.tiktockerChart == 'true' || contains(github.ref, 'refs/tags/v')
        id: install
      - name: Lint Helm Chart
        if: steps.filter.outputs.tiktockerChart == 'true' || contains(github.ref, 'refs/tags/v')
        run: |
          helm lint --kube-version "1.30.0" --strict deployment/tiktocker
      - name: Build and push Helm Chart
        if: steps.filter.outputs.tiktockerChart == 'true' || contains(github.ref, 'refs/tags/v')
        run: |
          VERSION=$(helm show chart deployment/tiktocker | awk -F: '/version: / {gsub(/^[ \t]+/, "", $2); print $2}')
          APP_VERSION="${{ steps.meta.outputs.version }}"
          REF=oci://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          ARTIFACT="$REF:$VERSION"
          echo "ARTIFACT=$ARTIFACT" >> "$GITHUB_ENV"
          if [ "$APP_VERSION" != "master" ]; then
            echo "Publishing Chart: $ARTIFACT for new image: $APP_VERSION"
          else
            helm pull $REF -d /tmp
            VERSION=$(helm show chart /tmp/tiktocker*.tgz | awk -F: '/version: / {gsub(/^[ \t]+/, "", $2); print $2}')
            echo "Publishing Chart: $ARTIFACT for last known released version: $VERSION"
          fi
          helm package deployment/tiktocker --destination . --version $VERSION --app-version "$APP_VERSION"
          helm push tiktocker-$VERSION.tgz $REF
          echo "Publishing Chart completed" 
