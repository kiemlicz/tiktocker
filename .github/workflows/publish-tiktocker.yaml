name: Publish TikTocker Docker images

on:
  push:
    branches:
      - master
    tags:
      - "v[0-9]+.*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish-images:
    name: Build TikTocker image

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses:  actions/checkout@v4
      - uses: dorny/paths-filter@v3.0.2
        id: filter
        name: Determine if TikTocker image should be built
        with:
          filters: |
            tiktockerImage:
              - '!deployment/**'
              - '!\.github/**'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: steps.filter.outputs.tiktockerImage == 'true' || contains(github.ref, 'refs/tags/v')
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        if: steps.filter.outputs.tiktockerImage == 'true' || contains(github.ref, 'refs/tags/v')
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        uses: docker/metadata-action@v5
        if: steps.filter.outputs.tiktockerImage == 'true' || contains(github.ref, 'refs/tags/v')
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # extract version after `v` prefix
            type=match,pattern=v(.*),group=1
            # fallback to branch name
            type=ref,event=branch
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        if: steps.filter.outputs.tiktockerImage == 'true' || contains(github.ref, 'refs/tags/v')
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
